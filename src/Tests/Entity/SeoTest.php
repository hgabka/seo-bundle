<?php

namespace Kunstmaan\SeoBundle\Tests\Entity;

use Kunstmaan\SeoBundle\Entity\Seo;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-18 at 12:21:52.
 *
 * @coversNothing
 */
class SeoTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Seo
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Seo();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    // META DATA TESTS

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getMetaAuthor
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setMetaAuthor
     */
    public function testGetSetMetaAuthor()
    {
        $this->object->setMetaAuthor('Author Name');
        $this->assertSame('Author Name', $this->object->getMetaAuthor());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getMetaDescription
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setMetaDescription
     */
    public function testGetSetMetaDescription()
    {
        $this->object->setMetaDescription('Meta Description');
        $this->assertSame('Meta Description', $this->object->getMetaDescription());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getMetaRobots
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setMetaRobots
     */
    public function testGetSetMetaRobots()
    {
        $this->object->setMetaRobots('noindex, nofollow');
        $this->assertSame('noindex, nofollow', $this->object->getMetaRobots());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getExtraMetadata
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setExtraMetadata
     */
    public function testGetSetExtraMetadata()
    {
        $this->object->setExtraMetadata('Extra Metadata');
        $this->assertSame('Extra Metadata', $this->object->getExtraMetadata());
    }

    // OPEN GRAPH TESTS

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setOgDescription
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getOgDescription
     */
    public function testGetSetOgDescription()
    {
        $this->object->setOgDescription('OpenGraph description');
        $this->assertSame('OpenGraph description', $this->object->getOgDescription());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setOgImage
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getOgImage
     */
    public function testGetSetOgImageWithImage()
    {
        $media = $this->getMock('Kunstmaan\MediaBundle\Entity\Media');
        $this->object->setOgImage($media);
        $this->assertSame($media, $this->object->getOgImage());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setOgImage
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getOgImage
     */
    public function testGetSetOgImageWithNullValue()
    {
        $this->object->setOgImage(null);
        $this->assertSame(null, $this->object->getOgImage());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setOgTitle
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getOgTitle
     */
    public function testGetSetOgTitle()
    {
        $this->object->setOgTitle('OpenGraph title');
        $this->assertSame('OpenGraph title', $this->object->getOgTitle());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setOgType
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getOgType
     */
    public function testGetSetOgType()
    {
        $this->object->setOgType('website');
        $this->assertSame('website', $this->object->getOgType());
    }

    // TWITTER CARD TESTS

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterTitle
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterTitle
     */
    public function testGetSetTwitterTitle()
    {
        $this->object->setTwitterTitle('twitter title');
        $this->assertSame('twitter title', $this->object->getTwitterTitle());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterDescription
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterDescription
     */
    public function testGetSetTwitterDescription()
    {
        $this->object->setTwitterDescription('twitter description');
        $this->assertSame('twitter description', $this->object->getTwitterDescription());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterSite
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterSite
     */
    public function testGetSetTwitterSite()
    {
        $this->object->setTwitterSite('@kunstmaan');
        $this->assertSame('@kunstmaan', $this->object->getTwitterSite());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterCreator
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterCreator
     */
    public function testGetSetTwitterCreator()
    {
        $this->object->setTwitterCreator('@denbatte');
        $this->assertSame('@denbatte', $this->object->getTwitterCreator());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterImage
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterImage
     */
    public function testGetSetTwitterImageWithImage()
    {
        $media = $this->getMock('Kunstmaan\MediaBundle\Entity\Media');
        $this->object->setTwitterImage($media);
        $this->assertSame($media, $this->object->getTwitterImage());
    }

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::setTwitterImage
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getTwitterImage
     */
    public function testGetSetTwitterImageWithNullValue()
    {
        $this->object->setTwitterImage(null);
        $this->assertSame(null, $this->object->getTwitterImage());
    }

    // HELPERS

    /**
     * @covers \Kunstmaan\SeoBundle\Entity\Seo::getDefaultAdminType
     */
    public function testGetDefaultAdminType()
    {
        $this->assertSame('Kunstmaan\SeoBundle\Form\SeoType', $this->object->getDefaultAdminType());
    }
}
